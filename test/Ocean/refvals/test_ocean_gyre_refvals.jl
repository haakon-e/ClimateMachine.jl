# Testing reference values and precisions
# Each test block of varr and parr should be followed by an append to refVals, refPrecs arrays.
# e.g.
#   refVals=[]
#   refPrecs=[]
#
#   varr = ..........
#   par  = ..........
#
#   append!(refVals ,[ varr ] )
#   append!(refPrecs,[ parr ] )
#
#   varr = ..........
#   par  = ..........
#
#   append!(refVals ,[ varr ] )
#   append!(refPrecs,[ parr ] )
#
#   varr = ..........
#   par  = ..........
#
#   append!(refVals ,[ varr ] )
#   append!(refPrecs,[ parr ] )
#
#   etc.....
#
#   Now for real!
#

refVals = []
refPrecs = []
# SC ========== Test number 1 reference values and precision match template. =======
# SC ========== /Users/chrishill/projects/clima/cm/test/Ocean/HydrostaticBoussinesq/test_ocean_gyre.jl test reference values ======================================
# BEGIN SCPRINT
# varr - reference values (from reference run)
# parr - digits match precision (hand edit as needed)
#
# [
#  [ MPIStateArray Name, Field Name, Maximum, Minimum, Mean, Standard Deviation ],
#  [         :                :          :        :      :          :           ],
# ]
varr = [
    [
        "Q",
        "u[1]",
        -2.18427865357219835873e-02,
        4.54905817704320050709e-02,
        2.91799084468619303323e-03,
        9.86739717788472255056e-03,
    ],
    [
        "Q",
        "u[2]",
        -6.47928098321387119229e-02,
        7.44690631237251432495e-02,
        -1.82439830964300966215e-03,
        1.02482752029024841434e-02,
    ],
    [
        "Q",
        :η,
        -6.35241759974374819997e-01,
        6.25677877693153861038e-01,
        -8.60068718305024041901e-04,
        2.24583755068219675932e-01,
    ],
    [
        "Q",
        :θ,
        9.03726335555428482264e-05,
        9.03968461560725344839e+00,
        2.49953258705220227043e+00,
        2.19711762918947606238e+00,
    ],
    [
        "s_aux",
        :y,
        0.00000000000000000000e+00,
        4.00000000000000046566e+06,
        2.00000000000000000000e+06,
        1.18025270281469495967e+06,
    ],
    [
        "s_aux",
        :w,
        -4.50036075461459223737e-05,
        4.09915220804811021062e-05,
        3.06722602595587297903e-07,
        8.22999489798410955438e-06,
    ],
    [
        "s_aux",
        :pkin,
        -9.00231747934270076783e-01,
        0.00000000000000000000e+00,
        -3.32080874523538072118e-01,
        2.56218992025050162908e-01,
    ],
    [
        "s_aux",
        :wz0,
        -2.22688579102610652283e-05,
        1.52895210358102938127e-05,
        -2.78589672590168561413e-08,
        7.72520757253795920232e-06,
    ],
    [
        "s_gflux",
        "ν∇u[1]",
        -1.84915426791050691892e-03,
        1.81823541139391206892e-03,
        4.41670652876216560588e-08,
        1.43003334026535461722e-04,
    ],
    [
        "s_gflux",
        "ν∇u[2]",
        -2.18923622988041743920e-03,
        1.83543406028729679316e-03,
        3.98744828991449433208e-06,
        3.02040505665129290977e-04,
    ],
    [
        "s_gflux",
        "ν∇u[3]",
        -1.31369743560772895408e-05,
        6.60039477945146449384e-06,
        -1.12119891567145960325e-08,
        9.06617548358093396365e-07,
    ],
    [
        "s_gflux",
        "ν∇u[4]",
        -3.29092487463896604671e-03,
        3.71582885889340866492e-03,
        -2.53728229769815408283e-06,
        2.97060576409856780689e-04,
    ],
    [
        "s_gflux",
        "ν∇u[5]",
        -3.81669587050501284836e-03,
        7.74606451320633592264e-04,
        -5.95763172118155189140e-06,
        2.09071039491200258605e-04,
    ],
    [
        "s_gflux",
        "ν∇u[6]",
        -7.41189897881484784109e-06,
        1.26149616846000803353e-05,
        1.41878743800085061125e-08,
        1.12070628757683659611e-06,
    ],
    [
        "s_gflux",
        "κ∇θ[1]",
        -5.86968584224644812338e-05,
        4.34652887121820283387e-05,
        -2.82719382567508372835e-06,
        8.15301391557321884090e-06,
    ],
    [
        "s_gflux",
        "κ∇θ[2]",
        -3.70308432284375849564e-05,
        3.11721545144766831389e-03,
        9.81447035540739714035e-04,
        8.31872571479874375368e-04,
    ],
    [
        "s_gflux",
        "κ∇θ[3]",
        -2.15846132870457054810e-05,
        2.00382267962942220408e-05,
        -5.17436031104969784121e-07,
        1.79150072112032684306e-06,
    ],
]
parr = [
    ["Q", "u[1]", 12, 12, 12, 12],
    ["Q", "u[2]", 12, 12, 12, 12],
    ["Q", :η, 12, 12, 12, 12],
    ["Q", :θ, 12, 12, 12, 12],
    ["s_aux", :y, 12, 12, 12, 12],
    ["s_aux", :w, 12, 12, 12, 12],
    ["s_aux", :pkin, 12, 12, 12, 12],
    ["s_aux", :wz0, 12, 12, 12, 12],
    ["s_gflux", "ν∇u[1]", 12, 12, 12, 12],
    ["s_gflux", "ν∇u[2]", 12, 12, 12, 12],
    ["s_gflux", "ν∇u[3]", 12, 12, 12, 12],
    ["s_gflux", "ν∇u[4]", 12, 12, 12, 12],
    ["s_gflux", "ν∇u[5]", 12, 12, 12, 12],
    ["s_gflux", "ν∇u[6]", 12, 12, 12, 12],
    ["s_gflux", "κ∇θ[1]", 12, 12, 12, 12],
    ["s_gflux", "κ∇θ[2]", 12, 12, 12, 12],
    ["s_gflux", "κ∇θ[3]", 12, 12, 8, 12],
]
# END SCPRINT

append!(refVals, [varr])
append!(refPrecs, [parr])

# SC ========== Test number 2 reference values and precision match template. =======
# SC ========== /Users/chrishill/projects/clima/cm/test/Ocean/HydrostaticBoussinesq/test_ocean_gyre.jl test reference values ======================================
# BEGIN SCPRINT
# varr - reference values (from reference run)
# parr - digits match precision (hand edit as needed)
#
# [
#  [ MPIStateArray Name, Field Name, Maximum, Minimum, Mean, Standard Deviation ],
#  [         :                :          :        :      :          :           ],
# ]
varr = [
    [
        "Q",
        "u[1]",
        -2.14403161060213384714e-02,
        4.51092912722281316751e-02,
        2.91883577365915263327e-03,
        9.85543151135863208789e-03,
    ],
    [
        "Q",
        "u[2]",
        -6.47849908268208068973e-02,
        7.44377079062340796245e-02,
        -1.82528856707940708402e-03,
        1.02465626974943338490e-02,
    ],
    [
        "Q",
        :η,
        -6.35241717401733962944e-01,
        6.25675643032199912952e-01,
        -8.59997171611655590248e-04,
        2.24578663698960928619e-01,
    ],
    [
        "Q",
        :θ,
        1.21624650983828366162e-04,
        9.05348870526675320036e+00,
        2.49953463844110279624e+00,
        2.19723475068906504148e+00,
    ],
    [
        "s_aux",
        :y,
        0.00000000000000000000e+00,
        4.00000000000000046566e+06,
        2.00000000000000000000e+06,
        1.18025270281469495967e+06,
    ],
    [
        "s_aux",
        :w,
        -4.48750663401728297594e-05,
        4.07425796079212936126e-05,
        3.05580091823959372610e-07,
        8.20754136359875149074e-06,
    ],
    [
        "s_aux",
        :pkin,
        -9.00231018468760080253e-01,
        0.00000000000000000000e+00,
        -3.32080814803801249724e-01,
        2.56218661345592568779e-01,
    ],
    [
        "s_aux",
        :wz0,
        -2.24168211854045644460e-05,
        1.54464254869175437296e-05,
        -2.71999565492576589218e-08,
        7.76164707621753630128e-06,
    ],
    [
        "s_gflux",
        "ν∇u[1]",
        -1.85093041460835305498e-03,
        1.81880838666876047845e-03,
        4.56526424711389789871e-08,
        1.42643910766357428534e-04,
    ],
    [
        "s_gflux",
        "ν∇u[2]",
        -2.20819366719671563229e-03,
        1.84128108384750657951e-03,
        3.98074575776293245019e-06,
        3.03797417171225480129e-04,
    ],
    [
        "s_gflux",
        "ν∇u[3]",
        -1.32036367846675870225e-05,
        6.56099008285145167548e-06,
        -1.24087351933463812712e-08,
        9.05500396408119435374e-07,
    ],
    [
        "s_gflux",
        "ν∇u[4]",
        -3.28419921150994737619e-03,
        3.70704618050693088249e-03,
        -2.54827541969113706709e-06,
        2.96228406753828749521e-04,
    ],
    [
        "s_gflux",
        "ν∇u[5]",
        -3.80879251696829247351e-03,
        7.74834565383260352560e-04,
        -5.93513695165015881065e-06,
        2.08479602570907525654e-04,
    ],
    [
        "s_gflux",
        "ν∇u[6]",
        -7.39839704966590930855e-06,
        1.26017207509591005658e-05,
        1.46129449482955510494e-08,
        1.11733219690338497597e-06,
    ],
    [
        "s_gflux",
        "κ∇θ[1]",
        -5.81601257251870891614e-05,
        4.70677319813339798652e-05,
        -2.82659431063543911260e-06,
        8.16581551142350108366e-06,
    ],
    [
        "s_gflux",
        "κ∇θ[2]",
        -3.76891063975906055088e-05,
        3.10874693302757654570e-03,
        9.82036601802479310747e-04,
        8.31189786431030404844e-04,
    ],
    [
        "s_gflux",
        "κ∇θ[3]",
        -2.42394160392341078493e-06,
        8.68196014640797840416e-08,
        -5.04918136536487334668e-07,
        3.01622429419160335704e-07,
    ],
]
parr = [
    ["Q", "u[1]", 12, 12, 12, 12],
    ["Q", "u[2]", 12, 12, 12, 12],
    ["Q", :η, 12, 12, 12, 12],
    ["Q", :θ, 12, 12, 12, 12],
    ["s_aux", :y, 12, 12, 12, 12],
    ["s_aux", :w, 12, 12, 12, 12],
    ["s_aux", :pkin, 12, 12, 12, 12],
    ["s_aux", :wz0, 12, 12, 12, 12],
    ["s_gflux", "ν∇u[1]", 12, 12, 12, 12],
    ["s_gflux", "ν∇u[2]", 12, 12, 12, 12],
    ["s_gflux", "ν∇u[3]", 12, 12, 12, 12],
    ["s_gflux", "ν∇u[4]", 12, 12, 12, 12],
    ["s_gflux", "ν∇u[5]", 12, 12, 12, 12],
    ["s_gflux", "ν∇u[6]", 12, 12, 12, 12],
    ["s_gflux", "κ∇θ[1]", 12, 12, 12, 12],
    ["s_gflux", "κ∇θ[2]", 12, 12, 12, 12],
    ["s_gflux", "κ∇θ[3]", 12, 8, 12, 12],
]

append!(refVals, [varr])
append!(refPrecs, [parr])
